# -*- coding: utf-8 -*-
"""Data_Extraction(Excel_Form).ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/17OnKegY2R-yNUkIDfh_Lm7bOFysTJHo_

Installing Conda
"""



!pip install -q condacolab
import condacolab
condacolab.install()

"""Installing Pyart"""

!pip install arm_pyart

!pip install xlwt

"""Importing libraies"""

import matplotlib.pyplot as plt
import numpy as np
import pyart
import pandas as pd
from scipy import stats as st
import os
import statistics as st
from statistics import mode, StatisticsError
import xlwt
from xlwt import Workbook



"""Connecting to drive"""

from google.colab import drive
drive.mount('/content/gdrive')
directory = '/content/gdrive/MyDrive/13FEB'

"""Taking the names of all the files in list"""

dir_list = os.listdir(directory)
print(dir_list)

"""Taking data and storing it in excel file"""

# Writing to an excel
# sheet using Python
# Workbook is created
wb = Workbook()

# add_sheet is used to create sheet.
sheet1 = wb.add_sheet('Sheet_1')
sheet1.write(0, 0, 'time')
sheet1.write(0, 1, 'name')
sheet1.write(0 ,2 , 'reflectivity')
sheet1.write(0 ,3 , 'velocity')
sheet1.write(0 ,4 , 'power')
sheet1.write(0 ,5 , 'spectrum_width')

k=1
for i in dir_list:
  radar = pyart.io.read("//content//gdrive//MyDrive//13FEB//"+i)
  raw=radar.fields

  # for time
  time=pyart.util.datetime_from_radar(radar)
  time=str(time)
  time=time.split(" ")
  time=time[-1]

  # for reflectivity
  y=raw.get('reflectivity')
  z=y.get('data')
  reflectivity_array = np.array(z)
  filter_arr = np.logical_and(np.greater(reflectivity_array , 30) , np.less(reflectivity_array , 80))
  try:
    r = st.mode(reflectivity_array[filter_arr])
  except StatisticsError:
    r = None
  del reflectivity_array
  del filter_arr

  #  for velocity
  a = raw.get('velocity')
  b = a.get('data')
  velocity_array = np.array(b)
  filter_arr = np.logical_and(np.greater(velocity_array , -30) , np.less(velocity_array, 30))
  try:
    v = st.mode(velocity_array[filter_arr])
  except StatisticsError:
    v = None
  del velocity_array
  del filter_arr

  #  for total_pow
  c = raw.get('total_power')
  d = c.get('data')
  total_power_array = np.array(d)
  filter_arr = np.logical_and(np.greater(total_power_array , 30) , np.less(total_power_array, 80))
  try:
    p = st.mode(total_power_array[filter_arr])
  except StatisticsError:
    p = None
  del total_power_array
  del filter_arr

    #  for spectrum_width
  e = raw.get('spectrum_width')
  f = a.get('data')
  spectrum_width_array = np.array(f)
  filter_arr = np.logical_and(np.greater(spectrum_width_array , 0) , np.less(spectrum_width_array, 30))
  try:
    s = st.mode(spectrum_width_array[filter_arr])
  except StatisticsError:
    s = None
  del spectrum_width_array
  del filter_arr
  if(r!=None and v!=None and s!=None and p!=None):
      sheet1.write(k, 0, time)
      sheet1.write(k, 1, i)
      sheet1.write(k, 2, float(r))
      sheet1.write(k, 3, float(v))
      sheet1.write(k, 4, float(p))
      sheet1.write(k, 5, float(s))
      k=k+1


print("DONE!")
wb.save('sample_dataset.csv')



